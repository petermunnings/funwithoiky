//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Site_Church", "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Church), "Site", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Site), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Church_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(oikonomos.data.Address), "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Church), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_PersonRelationship_Relationship", "Relationship", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Relationship), "PersonRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.PersonRelationship), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Site_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(oikonomos.data.Address), "Site", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Site), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_ChurchOptionalField_Church", "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Church), "ChurchOptionalField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.ChurchOptionalField), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_ChurchOptionalField_OptionalField", "OptionalField", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.OptionalField), "ChurchOptionalField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.ChurchOptionalField), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_PersonOptionalField_OptionalField", "OptionalField", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.OptionalField), "PersonOptionalField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.PersonOptionalField), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Address_ChurchSuburb", "ChurchSuburb", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(oikonomos.data.ChurchSuburb), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Address), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_ChurchSuburb_Church", "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Church), "ChurchSuburb", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.ChurchSuburb), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_GroupClassification_Church", "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Church), "GroupClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.GroupClassification), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_GroupClassification_GroupType", "GroupType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.GroupType), "GroupClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.GroupClassification), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_EventType_Church", "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Church), "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.EventType), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_EventType_Table", "Table", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Table), "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.EventType), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_ChurchSmsProvider_Church", "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Church), "ChurchSmsProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.ChurchSmsProvider), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_ChurchSmsProvider_SmsProvider", "SmsProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.SmsProvider), "ChurchSmsProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.ChurchSmsProvider), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Role_Church", "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Church), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Role), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_PermissionRole_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Role), "PermissionRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.PermissionRole), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_PermissionRole_Permission", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Permission), "PermissionRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.PermissionRole), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_PersonRole_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Role), "PersonRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.PersonRole), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "CanSetRole", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Role), "Role1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Role))]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Church_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Status), "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Church), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Family_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(oikonomos.data.Address), "Family", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Family), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Person_Family", "Family", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Family), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Person), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Person_Site", "Site", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(oikonomos.data.Site), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Person), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Person_Title", "Title", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(oikonomos.data.Title), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Person), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_PersonContact_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Person), "PersonOptionalField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.PersonOptionalField), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_PersonGroup_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Person), "PersonGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.PersonGroup), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_PersonRelationship_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Person), "PersonRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.PersonRelationship), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_PersonRelationship_PersonRelatedTo", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Person), "PersonRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.PersonRelationship), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_PersonRole_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Person), "PersonRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.PersonRole), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FamilyChurch", "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Church), "Family", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Family))]
[assembly: EdmRelationshipAttribute("oikonomosModel", "PersonChurch", "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Church), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Person))]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Event_Church", "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Church), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Event), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Event_ChangedByPerson", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Person), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Event), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Event_CreatedByPerson", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Person), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Event), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Event_EventVisibility", "EventVisibility", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.EventVisibility), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Event), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Event_Table", "Table", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Table), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Event), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Group_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(oikonomos.data.Address), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Group), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Group_Church", "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Church), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Group), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Group_Administrator", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(oikonomos.data.Person), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Group), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Group_GroupClassification", "GroupClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(oikonomos.data.GroupClassification), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Group), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Group_GroupType", "GroupType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.GroupType), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Group), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_Group_Leader", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(oikonomos.data.Person), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.Group), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_PersonGroup_Group", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Group), "PersonGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.PersonGroup), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_ChurchEmailTemplate_Church", "Church", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.Church), "ChurchEmailTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.ChurchEmailTemplate), true)]
[assembly: EdmRelationshipAttribute("oikonomosModel", "FK_ChurchEmailTemplate_EmailTemplate", "EmailTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(oikonomos.data.EmailTemplate), "ChurchEmailTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(oikonomos.data.ChurchEmailTemplate), true)]

#endregion

namespace oikonomos.data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class oikonomosEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new oikonomosEntities object using the connection string found in the 'oikonomosEntities' section of the application configuration file.
        /// </summary>
        public oikonomosEntities() : base("name=oikonomosEntities", "oikonomosEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new oikonomosEntities object.
        /// </summary>
        public oikonomosEntities(string connectionString) : base(connectionString, "oikonomosEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new oikonomosEntities object.
        /// </summary>
        public oikonomosEntities(EntityConnection connection) : base(connection, "oikonomosEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Church> Churches
        {
            get
            {
                if ((_Churches == null))
                {
                    _Churches = base.CreateObjectSet<Church>("Churches");
                }
                return _Churches;
            }
        }
        private ObjectSet<Church> _Churches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupType> GroupTypes
        {
            get
            {
                if ((_GroupTypes == null))
                {
                    _GroupTypes = base.CreateObjectSet<GroupType>("GroupTypes");
                }
                return _GroupTypes;
            }
        }
        private ObjectSet<GroupType> _GroupTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonGroup> PersonGroups
        {
            get
            {
                if ((_PersonGroups == null))
                {
                    _PersonGroups = base.CreateObjectSet<PersonGroup>("PersonGroups");
                }
                return _PersonGroups;
            }
        }
        private ObjectSet<PersonGroup> _PersonGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Site> Sites
        {
            get
            {
                if ((_Sites == null))
                {
                    _Sites = base.CreateObjectSet<Site>("Sites");
                }
                return _Sites;
            }
        }
        private ObjectSet<Site> _Sites;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Title> Titles
        {
            get
            {
                if ((_Titles == null))
                {
                    _Titles = base.CreateObjectSet<Title>("Titles");
                }
                return _Titles;
            }
        }
        private ObjectSet<Title> _Titles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonRole> PersonRoles
        {
            get
            {
                if ((_PersonRoles == null))
                {
                    _PersonRoles = base.CreateObjectSet<PersonRole>("PersonRoles");
                }
                return _PersonRoles;
            }
        }
        private ObjectSet<PersonRole> _PersonRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonRelationship> PersonRelationships
        {
            get
            {
                if ((_PersonRelationships == null))
                {
                    _PersonRelationships = base.CreateObjectSet<PersonRelationship>("PersonRelationships");
                }
                return _PersonRelationships;
            }
        }
        private ObjectSet<PersonRelationship> _PersonRelationships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Relationship> Relationships
        {
            get
            {
                if ((_Relationships == null))
                {
                    _Relationships = base.CreateObjectSet<Relationship>("Relationships");
                }
                return _Relationships;
            }
        }
        private ObjectSet<Relationship> _Relationships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventVisibility> EventVisibilities
        {
            get
            {
                if ((_EventVisibilities == null))
                {
                    _EventVisibilities = base.CreateObjectSet<EventVisibility>("EventVisibilities");
                }
                return _EventVisibilities;
            }
        }
        private ObjectSet<EventVisibility> _EventVisibilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Table> Tables
        {
            get
            {
                if ((_Tables == null))
                {
                    _Tables = base.CreateObjectSet<Table>("Tables");
                }
                return _Tables;
            }
        }
        private ObjectSet<Table> _Tables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OptionalField> OptionalFields
        {
            get
            {
                if ((_OptionalFields == null))
                {
                    _OptionalFields = base.CreateObjectSet<OptionalField>("OptionalFields");
                }
                return _OptionalFields;
            }
        }
        private ObjectSet<OptionalField> _OptionalFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChurchOptionalField> ChurchOptionalFields
        {
            get
            {
                if ((_ChurchOptionalFields == null))
                {
                    _ChurchOptionalFields = base.CreateObjectSet<ChurchOptionalField>("ChurchOptionalFields");
                }
                return _ChurchOptionalFields;
            }
        }
        private ObjectSet<ChurchOptionalField> _ChurchOptionalFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonOptionalField> PersonOptionalFields
        {
            get
            {
                if ((_PersonOptionalFields == null))
                {
                    _PersonOptionalFields = base.CreateObjectSet<PersonOptionalField>("PersonOptionalFields");
                }
                return _PersonOptionalFields;
            }
        }
        private ObjectSet<PersonOptionalField> _PersonOptionalFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChurchSuburb> ChurchSuburbs
        {
            get
            {
                if ((_ChurchSuburbs == null))
                {
                    _ChurchSuburbs = base.CreateObjectSet<ChurchSuburb>("ChurchSuburbs");
                }
                return _ChurchSuburbs;
            }
        }
        private ObjectSet<ChurchSuburb> _ChurchSuburbs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupClassification> GroupClassifications
        {
            get
            {
                if ((_GroupClassifications == null))
                {
                    _GroupClassifications = base.CreateObjectSet<GroupClassification>("GroupClassifications");
                }
                return _GroupClassifications;
            }
        }
        private ObjectSet<GroupClassification> _GroupClassifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChurchSmsProvider> ChurchSmsProviders
        {
            get
            {
                if ((_ChurchSmsProviders == null))
                {
                    _ChurchSmsProviders = base.CreateObjectSet<ChurchSmsProvider>("ChurchSmsProviders");
                }
                return _ChurchSmsProviders;
            }
        }
        private ObjectSet<ChurchSmsProvider> _ChurchSmsProviders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SmsProvider> SmsProviders
        {
            get
            {
                if ((_SmsProviders == null))
                {
                    _SmsProviders = base.CreateObjectSet<SmsProvider>("SmsProviders");
                }
                return _SmsProviders;
            }
        }
        private ObjectSet<SmsProvider> _SmsProviders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PermissionRole> PermissionRoles
        {
            get
            {
                if ((_PermissionRoles == null))
                {
                    _PermissionRoles = base.CreateObjectSet<PermissionRole>("PermissionRoles");
                }
                return _PermissionRoles;
            }
        }
        private ObjectSet<PermissionRole> _PermissionRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Status
        {
            get
            {
                if ((_Status == null))
                {
                    _Status = base.CreateObjectSet<Status>("Status");
                }
                return _Status;
            }
        }
        private ObjectSet<Status> _Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Family> Families
        {
            get
            {
                if ((_Families == null))
                {
                    _Families = base.CreateObjectSet<Family>("Families");
                }
                return _Families;
            }
        }
        private ObjectSet<Family> _Families;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChurchEmailTemplate> ChurchEmailTemplates
        {
            get
            {
                if ((_ChurchEmailTemplates == null))
                {
                    _ChurchEmailTemplates = base.CreateObjectSet<ChurchEmailTemplate>("ChurchEmailTemplates");
                }
                return _ChurchEmailTemplates;
            }
        }
        private ObjectSet<ChurchEmailTemplate> _ChurchEmailTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailTemplate> EmailTemplates
        {
            get
            {
                if ((_EmailTemplates == null))
                {
                    _EmailTemplates = base.CreateObjectSet<EmailTemplate>("EmailTemplates");
                }
                return _EmailTemplates;
            }
        }
        private ObjectSet<EmailTemplate> _EmailTemplates;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Churches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChurches(Church church)
        {
            base.AddObject("Churches", church);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupTypes(GroupType groupType)
        {
            base.AddObject("GroupTypes", groupType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonGroups(PersonGroup personGroup)
        {
            base.AddObject("PersonGroups", personGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSites(Site site)
        {
            base.AddObject("Sites", site);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Titles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTitles(Title title)
        {
            base.AddObject("Titles", title);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonRoles(PersonRole personRole)
        {
            base.AddObject("PersonRoles", personRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonRelationships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonRelationships(PersonRelationship personRelationship)
        {
            base.AddObject("PersonRelationships", personRelationship);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Relationships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelationships(Relationship relationship)
        {
            base.AddObject("Relationships", relationship);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventVisibilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventVisibilities(EventVisibility eventVisibility)
        {
            base.AddObject("EventVisibilities", eventVisibility);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTables(Table table)
        {
            base.AddObject("Tables", table);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OptionalFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptionalFields(OptionalField optionalField)
        {
            base.AddObject("OptionalFields", optionalField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChurchOptionalFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChurchOptionalFields(ChurchOptionalField churchOptionalField)
        {
            base.AddObject("ChurchOptionalFields", churchOptionalField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonOptionalFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonOptionalFields(PersonOptionalField personOptionalField)
        {
            base.AddObject("PersonOptionalFields", personOptionalField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChurchSuburbs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChurchSuburbs(ChurchSuburb churchSuburb)
        {
            base.AddObject("ChurchSuburbs", churchSuburb);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupClassifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupClassifications(GroupClassification groupClassification)
        {
            base.AddObject("GroupClassifications", groupClassification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChurchSmsProviders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChurchSmsProviders(ChurchSmsProvider churchSmsProvider)
        {
            base.AddObject("ChurchSmsProviders", churchSmsProvider);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SmsProviders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSmsProviders(SmsProvider smsProvider)
        {
            base.AddObject("SmsProviders", smsProvider);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PermissionRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissionRoles(PermissionRole permissionRole)
        {
            base.AddObject("PermissionRoles", permissionRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatus(Status status)
        {
            base.AddObject("Status", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Families EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFamilies(Family family)
        {
            base.AddObject("Families", family);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChurchEmailTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChurchEmailTemplates(ChurchEmailTemplate churchEmailTemplate)
        {
            base.AddObject("ChurchEmailTemplates", churchEmailTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailTemplates(EmailTemplate emailTemplate)
        {
            base.AddObject("EmailTemplates", emailTemplate);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="groupId">No Metadata Documentation available.</param>
        public ObjectResult<FetchComments_Result> FetchComments(Nullable<global::System.Int32> groupId)
        {
            ObjectParameter groupIdParameter;
            if (groupId.HasValue)
            {
                groupIdParameter = new ObjectParameter("groupId", groupId);
            }
            else
            {
                groupIdParameter = new ObjectParameter("groupId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<FetchComments_Result>("FetchComments", groupIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="churchId">No Metadata Documentation available.</param>
        public ObjectResult<FetchGroupAttendance_Result> FetchGroupAttendance(Nullable<global::System.Int32> churchId)
        {
            ObjectParameter churchIdParameter;
            if (churchId.HasValue)
            {
                churchIdParameter = new ObjectParameter("churchId", churchId);
            }
            else
            {
                churchIdParameter = new ObjectParameter("churchId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<FetchGroupAttendance_Result>("FetchGroupAttendance", churchIdParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        /// <param name="line1">Initial value of the Line1 property.</param>
        /// <param name="line2">Initial value of the Line2 property.</param>
        /// <param name="line3">Initial value of the Line3 property.</param>
        /// <param name="line4">Initial value of the Line4 property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="lat">Initial value of the Lat property.</param>
        /// <param name="long">Initial value of the Long property.</param>
        public static Address CreateAddress(global::System.Int32 addressId, global::System.String line1, global::System.String line2, global::System.String line3, global::System.String line4, global::System.DateTime created, global::System.DateTime changed, global::System.Decimal lat, global::System.Decimal @long)
        {
            Address address = new Address();
            address.AddressId = addressId;
            address.Line1 = line1;
            address.Line2 = line2;
            address.Line3 = line3;
            address.Line4 = line4;
            address.Created = created;
            address.Changed = changed;
            address.Lat = lat;
            address.Long = @long;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                if (_AddressId != value)
                {
                    OnAddressIdChanging(value);
                    ReportPropertyChanging("AddressId");
                    _AddressId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressId");
                    OnAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _AddressId;
        partial void OnAddressIdChanging(global::System.Int32 value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Line1
        {
            get
            {
                return _Line1;
            }
            set
            {
                OnLine1Changing(value);
                ReportPropertyChanging("Line1");
                _Line1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Line1");
                OnLine1Changed();
            }
        }
        private global::System.String _Line1;
        partial void OnLine1Changing(global::System.String value);
        partial void OnLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Line2
        {
            get
            {
                return _Line2;
            }
            set
            {
                OnLine2Changing(value);
                ReportPropertyChanging("Line2");
                _Line2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Line2");
                OnLine2Changed();
            }
        }
        private global::System.String _Line2;
        partial void OnLine2Changing(global::System.String value);
        partial void OnLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Line3
        {
            get
            {
                return _Line3;
            }
            set
            {
                OnLine3Changing(value);
                ReportPropertyChanging("Line3");
                _Line3 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Line3");
                OnLine3Changed();
            }
        }
        private global::System.String _Line3;
        partial void OnLine3Changing(global::System.String value);
        partial void OnLine3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Line4
        {
            get
            {
                return _Line4;
            }
            set
            {
                OnLine4Changing(value);
                ReportPropertyChanging("Line4");
                _Line4 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Line4");
                OnLine4Changed();
            }
        }
        private global::System.String _Line4;
        partial void OnLine4Changing(global::System.String value);
        partial void OnLine4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private global::System.Decimal _Lat;
        partial void OnLatChanging(global::System.Decimal value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Long
        {
            get
            {
                return _Long;
            }
            set
            {
                OnLongChanging(value);
                ReportPropertyChanging("Long");
                _Long = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Long");
                OnLongChanged();
            }
        }
        private global::System.Decimal _Long;
        partial void OnLongChanging(global::System.Decimal value);
        partial void OnLongChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressType
        {
            get
            {
                return _AddressType;
            }
            set
            {
                OnAddressTypeChanging(value);
                ReportPropertyChanging("AddressType");
                _AddressType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressType");
                OnAddressTypeChanged();
            }
        }
        private global::System.String _AddressType;
        partial void OnAddressTypeChanging(global::System.String value);
        partial void OnAddressTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChurchSuburbId
        {
            get
            {
                return _ChurchSuburbId;
            }
            set
            {
                OnChurchSuburbIdChanging(value);
                ReportPropertyChanging("ChurchSuburbId");
                _ChurchSuburbId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchSuburbId");
                OnChurchSuburbIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ChurchSuburbId;
        partial void OnChurchSuburbIdChanging(Nullable<global::System.Int32> value);
        partial void OnChurchSuburbIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Church_Address", "Church")]
        public EntityCollection<Church> Churches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Church>("oikonomosModel.FK_Church_Address", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Church>("oikonomosModel.FK_Church_Address", "Church", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Site_Address", "Site")]
        public EntityCollection<Site> Sites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Site>("oikonomosModel.FK_Site_Address", "Site");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Site>("oikonomosModel.FK_Site_Address", "Site", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Address_ChurchSuburb", "ChurchSuburb")]
        public ChurchSuburb ChurchSuburb
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChurchSuburb>("oikonomosModel.FK_Address_ChurchSuburb", "ChurchSuburb").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChurchSuburb>("oikonomosModel.FK_Address_ChurchSuburb", "ChurchSuburb").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChurchSuburb> ChurchSuburbReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChurchSuburb>("oikonomosModel.FK_Address_ChurchSuburb", "ChurchSuburb");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChurchSuburb>("oikonomosModel.FK_Address_ChurchSuburb", "ChurchSuburb", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Family_Address", "Family")]
        public EntityCollection<Family> Families
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Family>("oikonomosModel.FK_Family_Address", "Family");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Family>("oikonomosModel.FK_Family_Address", "Family", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Group_Address", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("oikonomosModel.FK_Group_Address", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("oikonomosModel.FK_Group_Address", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Church")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Church : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Church object.
        /// </summary>
        /// <param name="churchId">Initial value of the ChurchId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="sendWelcome">Initial value of the SendWelcome property.</param>
        /// <param name="emailLogin">Initial value of the EmailLogin property.</param>
        /// <param name="emailPassword">Initial value of the EmailPassword property.</param>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        public static Church CreateChurch(global::System.Int32 churchId, global::System.String name, global::System.DateTime created, global::System.DateTime changed, global::System.Boolean sendWelcome, global::System.String emailLogin, global::System.String emailPassword, global::System.Int32 statusId)
        {
            Church church = new Church();
            church.ChurchId = churchId;
            church.Name = name;
            church.Created = created;
            church.Changed = changed;
            church.SendWelcome = sendWelcome;
            church.EmailLogin = emailLogin;
            church.EmailPassword = emailPassword;
            church.StatusId = statusId;
            return church;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchId
        {
            get
            {
                return _ChurchId;
            }
            set
            {
                if (_ChurchId != value)
                {
                    OnChurchIdChanging(value);
                    ReportPropertyChanging("ChurchId");
                    _ChurchId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChurchId");
                    OnChurchIdChanged();
                }
            }
        }
        private global::System.Int32 _ChurchId;
        partial void OnChurchIdChanging(global::System.Int32 value);
        partial void OnChurchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteHeader
        {
            get
            {
                return _SiteHeader;
            }
            set
            {
                OnSiteHeaderChanging(value);
                ReportPropertyChanging("SiteHeader");
                _SiteHeader = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteHeader");
                OnSiteHeaderChanged();
            }
        }
        private global::System.String _SiteHeader;
        partial void OnSiteHeaderChanging(global::System.String value);
        partial void OnSiteHeaderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteDescription
        {
            get
            {
                return _SiteDescription;
            }
            set
            {
                OnSiteDescriptionChanging(value);
                ReportPropertyChanging("SiteDescription");
                _SiteDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SiteDescription");
                OnSiteDescriptionChanged();
            }
        }
        private global::System.String _SiteDescription;
        partial void OnSiteDescriptionChanging(global::System.String value);
        partial void OnSiteDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BackgroundImage
        {
            get
            {
                return _BackgroundImage;
            }
            set
            {
                OnBackgroundImageChanging(value);
                ReportPropertyChanging("BackgroundImage");
                _BackgroundImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BackgroundImage");
                OnBackgroundImageChanged();
            }
        }
        private global::System.String _BackgroundImage;
        partial void OnBackgroundImageChanging(global::System.String value);
        partial void OnBackgroundImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UITheme
        {
            get
            {
                return _UITheme;
            }
            set
            {
                OnUIThemeChanging(value);
                ReportPropertyChanging("UITheme");
                _UITheme = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UITheme");
                OnUIThemeChanged();
            }
        }
        private global::System.String _UITheme;
        partial void OnUIThemeChanging(global::System.String value);
        partial void OnUIThemeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                OnAddressIdChanging(value);
                ReportPropertyChanging("AddressId");
                _AddressId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressId");
                OnAddressIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressId;
        partial void OnAddressIdChanging(Nullable<global::System.Int32> value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SendWelcome
        {
            get
            {
                return _SendWelcome;
            }
            set
            {
                OnSendWelcomeChanging(value);
                ReportPropertyChanging("SendWelcome");
                _SendWelcome = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendWelcome");
                OnSendWelcomeChanged();
            }
        }
        private global::System.Boolean _SendWelcome;
        partial void OnSendWelcomeChanging(global::System.Boolean value);
        partial void OnSendWelcomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfficePhone
        {
            get
            {
                return _OfficePhone;
            }
            set
            {
                OnOfficePhoneChanging(value);
                ReportPropertyChanging("OfficePhone");
                _OfficePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OfficePhone");
                OnOfficePhoneChanged();
            }
        }
        private global::System.String _OfficePhone;
        partial void OnOfficePhoneChanging(global::System.String value);
        partial void OnOfficePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfficeEmail
        {
            get
            {
                return _OfficeEmail;
            }
            set
            {
                OnOfficeEmailChanging(value);
                ReportPropertyChanging("OfficeEmail");
                _OfficeEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OfficeEmail");
                OnOfficeEmailChanged();
            }
        }
        private global::System.String _OfficeEmail;
        partial void OnOfficeEmailChanging(global::System.String value);
        partial void OnOfficeEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailLogin
        {
            get
            {
                return _EmailLogin;
            }
            set
            {
                OnEmailLoginChanging(value);
                ReportPropertyChanging("EmailLogin");
                _EmailLogin = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailLogin");
                OnEmailLoginChanged();
            }
        }
        private global::System.String _EmailLogin;
        partial void OnEmailLoginChanging(global::System.String value);
        partial void OnEmailLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailPassword
        {
            get
            {
                return _EmailPassword;
            }
            set
            {
                OnEmailPasswordChanging(value);
                ReportPropertyChanging("EmailPassword");
                _EmailPassword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailPassword");
                OnEmailPasswordChanged();
            }
        }
        private global::System.String _EmailPassword;
        partial void OnEmailPasswordChanging(global::System.String value);
        partial void OnEmailPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Site_Church", "Site")]
        public EntityCollection<Site> Sites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Site>("oikonomosModel.FK_Site_Church", "Site");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Site>("oikonomosModel.FK_Site_Church", "Site", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Church_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("oikonomosModel.FK_Church_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("oikonomosModel.FK_Church_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("oikonomosModel.FK_Church_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("oikonomosModel.FK_Church_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchOptionalField_Church", "ChurchOptionalField")]
        public EntityCollection<ChurchOptionalField> ChurchOptionalFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChurchOptionalField>("oikonomosModel.FK_ChurchOptionalField_Church", "ChurchOptionalField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChurchOptionalField>("oikonomosModel.FK_ChurchOptionalField_Church", "ChurchOptionalField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchSuburb_Church", "ChurchSuburb")]
        public EntityCollection<ChurchSuburb> ChurchSuburbs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChurchSuburb>("oikonomosModel.FK_ChurchSuburb_Church", "ChurchSuburb");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChurchSuburb>("oikonomosModel.FK_ChurchSuburb_Church", "ChurchSuburb", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_GroupClassification_Church", "GroupClassification")]
        public EntityCollection<GroupClassification> GroupClassifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupClassification>("oikonomosModel.FK_GroupClassification_Church", "GroupClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupClassification>("oikonomosModel.FK_GroupClassification_Church", "GroupClassification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_EventType_Church", "EventType")]
        public EntityCollection<EventType> EventTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventType>("oikonomosModel.FK_EventType_Church", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventType>("oikonomosModel.FK_EventType_Church", "EventType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchSmsProvider_Church", "ChurchSmsProvider")]
        public EntityCollection<ChurchSmsProvider> ChurchSmsProviders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChurchSmsProvider>("oikonomosModel.FK_ChurchSmsProvider_Church", "ChurchSmsProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChurchSmsProvider>("oikonomosModel.FK_ChurchSmsProvider_Church", "ChurchSmsProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Role_Church", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("oikonomosModel.FK_Role_Church", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("oikonomosModel.FK_Role_Church", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Church_Status", "Status")]
        public Status Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("oikonomosModel.FK_Church_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("oikonomosModel.FK_Church_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("oikonomosModel.FK_Church_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("oikonomosModel.FK_Church_Status", "Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FamilyChurch", "Family")]
        public EntityCollection<Family> Families
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Family>("oikonomosModel.FamilyChurch", "Family");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Family>("oikonomosModel.FamilyChurch", "Family", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "PersonChurch", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("oikonomosModel.PersonChurch", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("oikonomosModel.PersonChurch", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Event_Church", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("oikonomosModel.FK_Event_Church", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("oikonomosModel.FK_Event_Church", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Group_Church", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("oikonomosModel.FK_Group_Church", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("oikonomosModel.FK_Group_Church", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchEmailTemplate_Church", "ChurchEmailTemplate")]
        public EntityCollection<ChurchEmailTemplate> ChurchEmailTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChurchEmailTemplate>("oikonomosModel.FK_ChurchEmailTemplate_Church", "ChurchEmailTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChurchEmailTemplate>("oikonomosModel.FK_ChurchEmailTemplate_Church", "ChurchEmailTemplate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="ChurchEmailTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChurchEmailTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChurchEmailTemplate object.
        /// </summary>
        /// <param name="churchEmailTemplateId">Initial value of the ChurchEmailTemplateId property.</param>
        /// <param name="churchId">Initial value of the ChurchId property.</param>
        /// <param name="emailTemplateId">Initial value of the EmailTemplateId property.</param>
        /// <param name="template">Initial value of the Template property.</param>
        public static ChurchEmailTemplate CreateChurchEmailTemplate(global::System.Int32 churchEmailTemplateId, global::System.Int32 churchId, global::System.Int32 emailTemplateId, global::System.String template)
        {
            ChurchEmailTemplate churchEmailTemplate = new ChurchEmailTemplate();
            churchEmailTemplate.ChurchEmailTemplateId = churchEmailTemplateId;
            churchEmailTemplate.ChurchId = churchId;
            churchEmailTemplate.EmailTemplateId = emailTemplateId;
            churchEmailTemplate.Template = template;
            return churchEmailTemplate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchEmailTemplateId
        {
            get
            {
                return _ChurchEmailTemplateId;
            }
            set
            {
                if (_ChurchEmailTemplateId != value)
                {
                    OnChurchEmailTemplateIdChanging(value);
                    ReportPropertyChanging("ChurchEmailTemplateId");
                    _ChurchEmailTemplateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChurchEmailTemplateId");
                    OnChurchEmailTemplateIdChanged();
                }
            }
        }
        private global::System.Int32 _ChurchEmailTemplateId;
        partial void OnChurchEmailTemplateIdChanging(global::System.Int32 value);
        partial void OnChurchEmailTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchId
        {
            get
            {
                return _ChurchId;
            }
            set
            {
                OnChurchIdChanging(value);
                ReportPropertyChanging("ChurchId");
                _ChurchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchId");
                OnChurchIdChanged();
            }
        }
        private global::System.Int32 _ChurchId;
        partial void OnChurchIdChanging(global::System.Int32 value);
        partial void OnChurchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailTemplateId
        {
            get
            {
                return _EmailTemplateId;
            }
            set
            {
                OnEmailTemplateIdChanging(value);
                ReportPropertyChanging("EmailTemplateId");
                _EmailTemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmailTemplateId");
                OnEmailTemplateIdChanged();
            }
        }
        private global::System.Int32 _EmailTemplateId;
        partial void OnEmailTemplateIdChanging(global::System.Int32 value);
        partial void OnEmailTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Template
        {
            get
            {
                return _Template;
            }
            set
            {
                OnTemplateChanging(value);
                ReportPropertyChanging("Template");
                _Template = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Template");
                OnTemplateChanged();
            }
        }
        private global::System.String _Template;
        partial void OnTemplateChanging(global::System.String value);
        partial void OnTemplateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchEmailTemplate_Church", "Church")]
        public Church Church
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_ChurchEmailTemplate_Church", "Church").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_ChurchEmailTemplate_Church", "Church").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Church> ChurchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_ChurchEmailTemplate_Church", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Church>("oikonomosModel.FK_ChurchEmailTemplate_Church", "Church", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchEmailTemplate_EmailTemplate", "EmailTemplate")]
        public EmailTemplate EmailTemplate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailTemplate>("oikonomosModel.FK_ChurchEmailTemplate_EmailTemplate", "EmailTemplate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailTemplate>("oikonomosModel.FK_ChurchEmailTemplate_EmailTemplate", "EmailTemplate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmailTemplate> EmailTemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmailTemplate>("oikonomosModel.FK_ChurchEmailTemplate_EmailTemplate", "EmailTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmailTemplate>("oikonomosModel.FK_ChurchEmailTemplate_EmailTemplate", "EmailTemplate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="ChurchOptionalField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChurchOptionalField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChurchOptionalField object.
        /// </summary>
        /// <param name="churchOptionalFieldId">Initial value of the ChurchOptionalFieldId property.</param>
        /// <param name="churchId">Initial value of the ChurchId property.</param>
        /// <param name="optionalFieldId">Initial value of the OptionalFieldId property.</param>
        /// <param name="visible">Initial value of the Visible property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static ChurchOptionalField CreateChurchOptionalField(global::System.Int32 churchOptionalFieldId, global::System.Int32 churchId, global::System.Int32 optionalFieldId, global::System.Boolean visible, global::System.DateTime created, global::System.DateTime changed)
        {
            ChurchOptionalField churchOptionalField = new ChurchOptionalField();
            churchOptionalField.ChurchOptionalFieldId = churchOptionalFieldId;
            churchOptionalField.ChurchId = churchId;
            churchOptionalField.OptionalFieldId = optionalFieldId;
            churchOptionalField.Visible = visible;
            churchOptionalField.Created = created;
            churchOptionalField.Changed = changed;
            return churchOptionalField;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchOptionalFieldId
        {
            get
            {
                return _ChurchOptionalFieldId;
            }
            set
            {
                if (_ChurchOptionalFieldId != value)
                {
                    OnChurchOptionalFieldIdChanging(value);
                    ReportPropertyChanging("ChurchOptionalFieldId");
                    _ChurchOptionalFieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChurchOptionalFieldId");
                    OnChurchOptionalFieldIdChanged();
                }
            }
        }
        private global::System.Int32 _ChurchOptionalFieldId;
        partial void OnChurchOptionalFieldIdChanging(global::System.Int32 value);
        partial void OnChurchOptionalFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchId
        {
            get
            {
                return _ChurchId;
            }
            set
            {
                OnChurchIdChanging(value);
                ReportPropertyChanging("ChurchId");
                _ChurchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchId");
                OnChurchIdChanged();
            }
        }
        private global::System.Int32 _ChurchId;
        partial void OnChurchIdChanging(global::System.Int32 value);
        partial void OnChurchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OptionalFieldId
        {
            get
            {
                return _OptionalFieldId;
            }
            set
            {
                OnOptionalFieldIdChanging(value);
                ReportPropertyChanging("OptionalFieldId");
                _OptionalFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionalFieldId");
                OnOptionalFieldIdChanged();
            }
        }
        private global::System.Int32 _OptionalFieldId;
        partial void OnOptionalFieldIdChanging(global::System.Int32 value);
        partial void OnOptionalFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Visible
        {
            get
            {
                return _Visible;
            }
            set
            {
                OnVisibleChanging(value);
                ReportPropertyChanging("Visible");
                _Visible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Visible");
                OnVisibleChanged();
            }
        }
        private global::System.Boolean _Visible;
        partial void OnVisibleChanging(global::System.Boolean value);
        partial void OnVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchOptionalField_Church", "Church")]
        public Church Church
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_ChurchOptionalField_Church", "Church").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_ChurchOptionalField_Church", "Church").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Church> ChurchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_ChurchOptionalField_Church", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Church>("oikonomosModel.FK_ChurchOptionalField_Church", "Church", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchOptionalField_OptionalField", "OptionalField")]
        public OptionalField OptionalField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionalField>("oikonomosModel.FK_ChurchOptionalField_OptionalField", "OptionalField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionalField>("oikonomosModel.FK_ChurchOptionalField_OptionalField", "OptionalField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OptionalField> OptionalFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionalField>("oikonomosModel.FK_ChurchOptionalField_OptionalField", "OptionalField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OptionalField>("oikonomosModel.FK_ChurchOptionalField_OptionalField", "OptionalField", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="ChurchSmsProvider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChurchSmsProvider : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChurchSmsProvider object.
        /// </summary>
        /// <param name="churchSmsProviderId">Initial value of the ChurchSmsProviderId property.</param>
        /// <param name="churchId">Initial value of the ChurchId property.</param>
        /// <param name="smsProviderId">Initial value of the SmsProviderId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static ChurchSmsProvider CreateChurchSmsProvider(global::System.Int32 churchSmsProviderId, global::System.Int32 churchId, global::System.Int32 smsProviderId, global::System.String username, global::System.String password, global::System.DateTime created)
        {
            ChurchSmsProvider churchSmsProvider = new ChurchSmsProvider();
            churchSmsProvider.ChurchSmsProviderId = churchSmsProviderId;
            churchSmsProvider.ChurchId = churchId;
            churchSmsProvider.SmsProviderId = smsProviderId;
            churchSmsProvider.Username = username;
            churchSmsProvider.Password = password;
            churchSmsProvider.Created = created;
            return churchSmsProvider;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchSmsProviderId
        {
            get
            {
                return _ChurchSmsProviderId;
            }
            set
            {
                if (_ChurchSmsProviderId != value)
                {
                    OnChurchSmsProviderIdChanging(value);
                    ReportPropertyChanging("ChurchSmsProviderId");
                    _ChurchSmsProviderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChurchSmsProviderId");
                    OnChurchSmsProviderIdChanged();
                }
            }
        }
        private global::System.Int32 _ChurchSmsProviderId;
        partial void OnChurchSmsProviderIdChanging(global::System.Int32 value);
        partial void OnChurchSmsProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchId
        {
            get
            {
                return _ChurchId;
            }
            set
            {
                OnChurchIdChanging(value);
                ReportPropertyChanging("ChurchId");
                _ChurchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchId");
                OnChurchIdChanged();
            }
        }
        private global::System.Int32 _ChurchId;
        partial void OnChurchIdChanging(global::System.Int32 value);
        partial void OnChurchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SmsProviderId
        {
            get
            {
                return _SmsProviderId;
            }
            set
            {
                OnSmsProviderIdChanging(value);
                ReportPropertyChanging("SmsProviderId");
                _SmsProviderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SmsProviderId");
                OnSmsProviderIdChanged();
            }
        }
        private global::System.Int32 _SmsProviderId;
        partial void OnSmsProviderIdChanging(global::System.Int32 value);
        partial void OnSmsProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchSmsProvider_Church", "Church")]
        public Church Church
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_ChurchSmsProvider_Church", "Church").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_ChurchSmsProvider_Church", "Church").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Church> ChurchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_ChurchSmsProvider_Church", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Church>("oikonomosModel.FK_ChurchSmsProvider_Church", "Church", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchSmsProvider_SmsProvider", "SmsProvider")]
        public SmsProvider SmsProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SmsProvider>("oikonomosModel.FK_ChurchSmsProvider_SmsProvider", "SmsProvider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SmsProvider>("oikonomosModel.FK_ChurchSmsProvider_SmsProvider", "SmsProvider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SmsProvider> SmsProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SmsProvider>("oikonomosModel.FK_ChurchSmsProvider_SmsProvider", "SmsProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SmsProvider>("oikonomosModel.FK_ChurchSmsProvider_SmsProvider", "SmsProvider", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="ChurchSuburb")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChurchSuburb : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChurchSuburb object.
        /// </summary>
        /// <param name="churchSuburbId">Initial value of the ChurchSuburbId property.</param>
        /// <param name="churchId">Initial value of the ChurchId property.</param>
        /// <param name="suburb">Initial value of the Suburb property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static ChurchSuburb CreateChurchSuburb(global::System.Int32 churchSuburbId, global::System.Int32 churchId, global::System.String suburb, global::System.DateTime created, global::System.DateTime changed)
        {
            ChurchSuburb churchSuburb = new ChurchSuburb();
            churchSuburb.ChurchSuburbId = churchSuburbId;
            churchSuburb.ChurchId = churchId;
            churchSuburb.Suburb = suburb;
            churchSuburb.Created = created;
            churchSuburb.Changed = changed;
            return churchSuburb;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchSuburbId
        {
            get
            {
                return _ChurchSuburbId;
            }
            set
            {
                if (_ChurchSuburbId != value)
                {
                    OnChurchSuburbIdChanging(value);
                    ReportPropertyChanging("ChurchSuburbId");
                    _ChurchSuburbId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChurchSuburbId");
                    OnChurchSuburbIdChanged();
                }
            }
        }
        private global::System.Int32 _ChurchSuburbId;
        partial void OnChurchSuburbIdChanging(global::System.Int32 value);
        partial void OnChurchSuburbIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchId
        {
            get
            {
                return _ChurchId;
            }
            set
            {
                OnChurchIdChanging(value);
                ReportPropertyChanging("ChurchId");
                _ChurchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchId");
                OnChurchIdChanged();
            }
        }
        private global::System.Int32 _ChurchId;
        partial void OnChurchIdChanging(global::System.Int32 value);
        partial void OnChurchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Suburb
        {
            get
            {
                return _Suburb;
            }
            set
            {
                OnSuburbChanging(value);
                ReportPropertyChanging("Suburb");
                _Suburb = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Suburb");
                OnSuburbChanged();
            }
        }
        private global::System.String _Suburb;
        partial void OnSuburbChanging(global::System.String value);
        partial void OnSuburbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Address_ChurchSuburb", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("oikonomosModel.FK_Address_ChurchSuburb", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("oikonomosModel.FK_Address_ChurchSuburb", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchSuburb_Church", "Church")]
        public Church Church
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_ChurchSuburb_Church", "Church").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_ChurchSuburb_Church", "Church").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Church> ChurchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_ChurchSuburb_Church", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Church>("oikonomosModel.FK_ChurchSuburb_Church", "Church", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="EmailTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailTemplate object.
        /// </summary>
        /// <param name="emailTemplateId">Initial value of the EmailTemplateId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EmailTemplate CreateEmailTemplate(global::System.Int32 emailTemplateId, global::System.String name)
        {
            EmailTemplate emailTemplate = new EmailTemplate();
            emailTemplate.EmailTemplateId = emailTemplateId;
            emailTemplate.Name = name;
            return emailTemplate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmailTemplateId
        {
            get
            {
                return _EmailTemplateId;
            }
            set
            {
                if (_EmailTemplateId != value)
                {
                    OnEmailTemplateIdChanging(value);
                    ReportPropertyChanging("EmailTemplateId");
                    _EmailTemplateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmailTemplateId");
                    OnEmailTemplateIdChanged();
                }
            }
        }
        private global::System.Int32 _EmailTemplateId;
        partial void OnEmailTemplateIdChanging(global::System.Int32 value);
        partial void OnEmailTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchEmailTemplate_EmailTemplate", "ChurchEmailTemplate")]
        public EntityCollection<ChurchEmailTemplate> ChurchEmailTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChurchEmailTemplate>("oikonomosModel.FK_ChurchEmailTemplate_EmailTemplate", "ChurchEmailTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChurchEmailTemplate>("oikonomosModel.FK_ChurchEmailTemplate_EmailTemplate", "ChurchEmailTemplate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="tableId">Initial value of the TableId property.</param>
        /// <param name="reference">Initial value of the Reference property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="eventVisibilityId">Initial value of the EventVisibilityId property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="createdByPersonId">Initial value of the CreatedByPersonId property.</param>
        /// <param name="changedByPersonId">Initial value of the ChangedByPersonId property.</param>
        /// <param name="eventDate">Initial value of the EventDate property.</param>
        /// <param name="churchId">Initial value of the ChurchId property.</param>
        public static Event CreateEvent(global::System.Int32 eventId, global::System.Int32 tableId, global::System.Int32 reference, global::System.String description, global::System.Int32 eventVisibilityId, global::System.DateTime created, global::System.DateTime changed, global::System.Int32 createdByPersonId, global::System.Int32 changedByPersonId, global::System.DateTime eventDate, global::System.Int32 churchId)
        {
            Event @event = new Event();
            @event.EventId = eventId;
            @event.TableId = tableId;
            @event.Reference = reference;
            @event.Description = description;
            @event.EventVisibilityId = eventVisibilityId;
            @event.Created = created;
            @event.Changed = changed;
            @event.CreatedByPersonId = createdByPersonId;
            @event.ChangedByPersonId = changedByPersonId;
            @event.EventDate = eventDate;
            @event.ChurchId = churchId;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TableId
        {
            get
            {
                return _TableId;
            }
            set
            {
                OnTableIdChanging(value);
                ReportPropertyChanging("TableId");
                _TableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TableId");
                OnTableIdChanged();
            }
        }
        private global::System.Int32 _TableId;
        partial void OnTableIdChanging(global::System.Int32 value);
        partial void OnTableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.Int32 _Reference;
        partial void OnReferenceChanging(global::System.Int32 value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FollowUpDate
        {
            get
            {
                return _FollowUpDate;
            }
            set
            {
                OnFollowUpDateChanging(value);
                ReportPropertyChanging("FollowUpDate");
                _FollowUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FollowUpDate");
                OnFollowUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FollowUpDate;
        partial void OnFollowUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFollowUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventVisibilityId
        {
            get
            {
                return _EventVisibilityId;
            }
            set
            {
                OnEventVisibilityIdChanging(value);
                ReportPropertyChanging("EventVisibilityId");
                _EventVisibilityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventVisibilityId");
                OnEventVisibilityIdChanged();
            }
        }
        private global::System.Int32 _EventVisibilityId;
        partial void OnEventVisibilityIdChanging(global::System.Int32 value);
        partial void OnEventVisibilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByPersonId
        {
            get
            {
                return _CreatedByPersonId;
            }
            set
            {
                OnCreatedByPersonIdChanging(value);
                ReportPropertyChanging("CreatedByPersonId");
                _CreatedByPersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByPersonId");
                OnCreatedByPersonIdChanged();
            }
        }
        private global::System.Int32 _CreatedByPersonId;
        partial void OnCreatedByPersonIdChanging(global::System.Int32 value);
        partial void OnCreatedByPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChangedByPersonId
        {
            get
            {
                return _ChangedByPersonId;
            }
            set
            {
                OnChangedByPersonIdChanging(value);
                ReportPropertyChanging("ChangedByPersonId");
                _ChangedByPersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangedByPersonId");
                OnChangedByPersonIdChanged();
            }
        }
        private global::System.Int32 _ChangedByPersonId;
        partial void OnChangedByPersonIdChanging(global::System.Int32 value);
        partial void OnChangedByPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDate
        {
            get
            {
                return _EventDate;
            }
            set
            {
                OnEventDateChanging(value);
                ReportPropertyChanging("EventDate");
                _EventDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDate");
                OnEventDateChanged();
            }
        }
        private global::System.DateTime _EventDate;
        partial void OnEventDateChanging(global::System.DateTime value);
        partial void OnEventDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchId
        {
            get
            {
                return _ChurchId;
            }
            set
            {
                OnChurchIdChanging(value);
                ReportPropertyChanging("ChurchId");
                _ChurchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchId");
                OnChurchIdChanged();
            }
        }
        private global::System.Int32 _ChurchId;
        partial void OnChurchIdChanging(global::System.Int32 value);
        partial void OnChurchIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Event_Church", "Church")]
        public Church Church
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_Event_Church", "Church").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_Event_Church", "Church").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Church> ChurchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_Event_Church", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Church>("oikonomosModel.FK_Event_Church", "Church", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Event_ChangedByPerson", "Person")]
        public Person ChangedByPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_Event_ChangedByPerson", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_Event_ChangedByPerson", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> ChangedByPersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_Event_ChangedByPerson", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("oikonomosModel.FK_Event_ChangedByPerson", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Event_CreatedByPerson", "Person")]
        public Person CreatedByPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_Event_CreatedByPerson", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_Event_CreatedByPerson", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> CreatedByPersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_Event_CreatedByPerson", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("oikonomosModel.FK_Event_CreatedByPerson", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Event_EventVisibility", "EventVisibility")]
        public EventVisibility EventVisibility
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventVisibility>("oikonomosModel.FK_Event_EventVisibility", "EventVisibility").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventVisibility>("oikonomosModel.FK_Event_EventVisibility", "EventVisibility").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventVisibility> EventVisibilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventVisibility>("oikonomosModel.FK_Event_EventVisibility", "EventVisibility");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventVisibility>("oikonomosModel.FK_Event_EventVisibility", "EventVisibility", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Event_Table", "Table")]
        public Table Table
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Table>("oikonomosModel.FK_Event_Table", "Table").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Table>("oikonomosModel.FK_Event_Table", "Table").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Table> TableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Table>("oikonomosModel.FK_Event_Table", "Table");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Table>("oikonomosModel.FK_Event_Table", "Table", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="eventTypeId">Initial value of the EventTypeId property.</param>
        /// <param name="churchId">Initial value of the ChurchId property.</param>
        /// <param name="tableId">Initial value of the TableId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static EventType CreateEventType(global::System.Int32 eventTypeId, global::System.Int32 churchId, global::System.Int32 tableId, global::System.String name, global::System.DateTime created, global::System.DateTime changed)
        {
            EventType eventType = new EventType();
            eventType.EventTypeId = eventTypeId;
            eventType.ChurchId = churchId;
            eventType.TableId = tableId;
            eventType.Name = name;
            eventType.Created = created;
            eventType.Changed = changed;
            return eventType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeId
        {
            get
            {
                return _EventTypeId;
            }
            set
            {
                if (_EventTypeId != value)
                {
                    OnEventTypeIdChanging(value);
                    ReportPropertyChanging("EventTypeId");
                    _EventTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventTypeId");
                    OnEventTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _EventTypeId;
        partial void OnEventTypeIdChanging(global::System.Int32 value);
        partial void OnEventTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchId
        {
            get
            {
                return _ChurchId;
            }
            set
            {
                OnChurchIdChanging(value);
                ReportPropertyChanging("ChurchId");
                _ChurchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchId");
                OnChurchIdChanged();
            }
        }
        private global::System.Int32 _ChurchId;
        partial void OnChurchIdChanging(global::System.Int32 value);
        partial void OnChurchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TableId
        {
            get
            {
                return _TableId;
            }
            set
            {
                OnTableIdChanging(value);
                ReportPropertyChanging("TableId");
                _TableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TableId");
                OnTableIdChanged();
            }
        }
        private global::System.Int32 _TableId;
        partial void OnTableIdChanging(global::System.Int32 value);
        partial void OnTableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_EventType_Church", "Church")]
        public Church Church
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_EventType_Church", "Church").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_EventType_Church", "Church").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Church> ChurchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_EventType_Church", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Church>("oikonomosModel.FK_EventType_Church", "Church", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_EventType_Table", "Table")]
        public Table Table
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Table>("oikonomosModel.FK_EventType_Table", "Table").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Table>("oikonomosModel.FK_EventType_Table", "Table").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Table> TableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Table>("oikonomosModel.FK_EventType_Table", "Table");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Table>("oikonomosModel.FK_EventType_Table", "Table", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="EventVisibility")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventVisibility : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventVisibility object.
        /// </summary>
        /// <param name="eventVisibilityId">Initial value of the EventVisibilityId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static EventVisibility CreateEventVisibility(global::System.Int32 eventVisibilityId, global::System.String name, global::System.DateTime created)
        {
            EventVisibility eventVisibility = new EventVisibility();
            eventVisibility.EventVisibilityId = eventVisibilityId;
            eventVisibility.Name = name;
            eventVisibility.Created = created;
            return eventVisibility;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventVisibilityId
        {
            get
            {
                return _EventVisibilityId;
            }
            set
            {
                if (_EventVisibilityId != value)
                {
                    OnEventVisibilityIdChanging(value);
                    ReportPropertyChanging("EventVisibilityId");
                    _EventVisibilityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventVisibilityId");
                    OnEventVisibilityIdChanged();
                }
            }
        }
        private global::System.Int32 _EventVisibilityId;
        partial void OnEventVisibilityIdChanging(global::System.Int32 value);
        partial void OnEventVisibilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Event_EventVisibility", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("oikonomosModel.FK_Event_EventVisibility", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("oikonomosModel.FK_Event_EventVisibility", "Event", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Family")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Family : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Family object.
        /// </summary>
        /// <param name="familyId">Initial value of the FamilyId property.</param>
        /// <param name="familyName">Initial value of the FamilyName property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static Family CreateFamily(global::System.Int32 familyId, global::System.String familyName, global::System.DateTime created, global::System.DateTime changed)
        {
            Family family = new Family();
            family.FamilyId = familyId;
            family.FamilyName = familyName;
            family.Created = created;
            family.Changed = changed;
            return family;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FamilyId
        {
            get
            {
                return _FamilyId;
            }
            set
            {
                if (_FamilyId != value)
                {
                    OnFamilyIdChanging(value);
                    ReportPropertyChanging("FamilyId");
                    _FamilyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FamilyId");
                    OnFamilyIdChanged();
                }
            }
        }
        private global::System.Int32 _FamilyId;
        partial void OnFamilyIdChanging(global::System.Int32 value);
        partial void OnFamilyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FamilyName
        {
            get
            {
                return _FamilyName;
            }
            set
            {
                OnFamilyNameChanging(value);
                ReportPropertyChanging("FamilyName");
                _FamilyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FamilyName");
                OnFamilyNameChanged();
            }
        }
        private global::System.String _FamilyName;
        partial void OnFamilyNameChanging(global::System.String value);
        partial void OnFamilyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                OnAddressIdChanging(value);
                ReportPropertyChanging("AddressId");
                _AddressId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressId");
                OnAddressIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressId;
        partial void OnAddressIdChanging(Nullable<global::System.Int32> value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Anniversary
        {
            get
            {
                return _Anniversary;
            }
            set
            {
                OnAnniversaryChanging(value);
                ReportPropertyChanging("Anniversary");
                _Anniversary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Anniversary");
                OnAnniversaryChanged();
            }
        }
        private Nullable<global::System.DateTime> _Anniversary;
        partial void OnAnniversaryChanging(Nullable<global::System.DateTime> value);
        partial void OnAnniversaryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Family_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("oikonomosModel.FK_Family_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("oikonomosModel.FK_Family_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("oikonomosModel.FK_Family_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("oikonomosModel.FK_Family_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Person_Family", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("oikonomosModel.FK_Person_Family", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("oikonomosModel.FK_Person_Family", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FamilyChurch", "Church")]
        public EntityCollection<Church> Churches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Church>("oikonomosModel.FamilyChurch", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Church>("oikonomosModel.FamilyChurch", "Church", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="churchId">Initial value of the ChurchId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="groupTypeId">Initial value of the GroupTypeId property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static Group CreateGroup(global::System.Int32 groupId, global::System.Int32 churchId, global::System.String name, global::System.Int32 groupTypeId, global::System.DateTime created, global::System.DateTime changed)
        {
            Group group = new Group();
            group.GroupId = groupId;
            group.ChurchId = churchId;
            group.Name = name;
            group.GroupTypeId = groupTypeId;
            group.Created = created;
            group.Changed = changed;
            return group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                if (_GroupId != value)
                {
                    OnGroupIdChanging(value);
                    ReportPropertyChanging("GroupId");
                    _GroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupId");
                    OnGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchId
        {
            get
            {
                return _ChurchId;
            }
            set
            {
                OnChurchIdChanging(value);
                ReportPropertyChanging("ChurchId");
                _ChurchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchId");
                OnChurchIdChanged();
            }
        }
        private global::System.Int32 _ChurchId;
        partial void OnChurchIdChanging(global::System.Int32 value);
        partial void OnChurchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeaderId
        {
            get
            {
                return _LeaderId;
            }
            set
            {
                OnLeaderIdChanging(value);
                ReportPropertyChanging("LeaderId");
                _LeaderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaderId");
                OnLeaderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeaderId;
        partial void OnLeaderIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdministratorId
        {
            get
            {
                return _AdministratorId;
            }
            set
            {
                OnAdministratorIdChanging(value);
                ReportPropertyChanging("AdministratorId");
                _AdministratorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdministratorId");
                OnAdministratorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AdministratorId;
        partial void OnAdministratorIdChanging(Nullable<global::System.Int32> value);
        partial void OnAdministratorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupTypeId
        {
            get
            {
                return _GroupTypeId;
            }
            set
            {
                OnGroupTypeIdChanging(value);
                ReportPropertyChanging("GroupTypeId");
                _GroupTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupTypeId");
                OnGroupTypeIdChanged();
            }
        }
        private global::System.Int32 _GroupTypeId;
        partial void OnGroupTypeIdChanging(global::System.Int32 value);
        partial void OnGroupTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                OnAddressIdChanging(value);
                ReportPropertyChanging("AddressId");
                _AddressId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressId");
                OnAddressIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressId;
        partial void OnAddressIdChanging(Nullable<global::System.Int32> value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupClassificationId
        {
            get
            {
                return _GroupClassificationId;
            }
            set
            {
                OnGroupClassificationIdChanging(value);
                ReportPropertyChanging("GroupClassificationId");
                _GroupClassificationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupClassificationId");
                OnGroupClassificationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupClassificationId;
        partial void OnGroupClassificationIdChanging(Nullable<global::System.Int32> value);
        partial void OnGroupClassificationIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Group_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("oikonomosModel.FK_Group_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("oikonomosModel.FK_Group_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("oikonomosModel.FK_Group_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("oikonomosModel.FK_Group_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Group_Church", "Church")]
        public Church Church
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_Group_Church", "Church").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_Group_Church", "Church").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Church> ChurchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_Group_Church", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Church>("oikonomosModel.FK_Group_Church", "Church", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Group_Administrator", "Person")]
        public Person Administrator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_Group_Administrator", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_Group_Administrator", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> AdministratorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_Group_Administrator", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("oikonomosModel.FK_Group_Administrator", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Group_GroupClassification", "GroupClassification")]
        public GroupClassification GroupClassification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupClassification>("oikonomosModel.FK_Group_GroupClassification", "GroupClassification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupClassification>("oikonomosModel.FK_Group_GroupClassification", "GroupClassification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupClassification> GroupClassificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupClassification>("oikonomosModel.FK_Group_GroupClassification", "GroupClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupClassification>("oikonomosModel.FK_Group_GroupClassification", "GroupClassification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Group_GroupType", "GroupType")]
        public GroupType GroupType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupType>("oikonomosModel.FK_Group_GroupType", "GroupType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupType>("oikonomosModel.FK_Group_GroupType", "GroupType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupType> GroupTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupType>("oikonomosModel.FK_Group_GroupType", "GroupType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupType>("oikonomosModel.FK_Group_GroupType", "GroupType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Group_Leader", "Person")]
        public Person Leader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_Group_Leader", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_Group_Leader", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> LeaderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_Group_Leader", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("oikonomosModel.FK_Group_Leader", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonGroup_Group", "PersonGroup")]
        public EntityCollection<PersonGroup> PersonGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonGroup>("oikonomosModel.FK_PersonGroup_Group", "PersonGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonGroup>("oikonomosModel.FK_PersonGroup_Group", "PersonGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="GroupClassification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupClassification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupClassification object.
        /// </summary>
        /// <param name="groupClassificationId">Initial value of the GroupClassificationId property.</param>
        /// <param name="churchId">Initial value of the ChurchId property.</param>
        /// <param name="groupTypeId">Initial value of the GroupTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static GroupClassification CreateGroupClassification(global::System.Int32 groupClassificationId, global::System.Int32 churchId, global::System.Int32 groupTypeId, global::System.String name, global::System.DateTime created, global::System.DateTime changed)
        {
            GroupClassification groupClassification = new GroupClassification();
            groupClassification.GroupClassificationId = groupClassificationId;
            groupClassification.ChurchId = churchId;
            groupClassification.GroupTypeId = groupTypeId;
            groupClassification.Name = name;
            groupClassification.Created = created;
            groupClassification.Changed = changed;
            return groupClassification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupClassificationId
        {
            get
            {
                return _GroupClassificationId;
            }
            set
            {
                if (_GroupClassificationId != value)
                {
                    OnGroupClassificationIdChanging(value);
                    ReportPropertyChanging("GroupClassificationId");
                    _GroupClassificationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupClassificationId");
                    OnGroupClassificationIdChanged();
                }
            }
        }
        private global::System.Int32 _GroupClassificationId;
        partial void OnGroupClassificationIdChanging(global::System.Int32 value);
        partial void OnGroupClassificationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchId
        {
            get
            {
                return _ChurchId;
            }
            set
            {
                OnChurchIdChanging(value);
                ReportPropertyChanging("ChurchId");
                _ChurchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchId");
                OnChurchIdChanged();
            }
        }
        private global::System.Int32 _ChurchId;
        partial void OnChurchIdChanging(global::System.Int32 value);
        partial void OnChurchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupTypeId
        {
            get
            {
                return _GroupTypeId;
            }
            set
            {
                OnGroupTypeIdChanging(value);
                ReportPropertyChanging("GroupTypeId");
                _GroupTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupTypeId");
                OnGroupTypeIdChanged();
            }
        }
        private global::System.Int32 _GroupTypeId;
        partial void OnGroupTypeIdChanging(global::System.Int32 value);
        partial void OnGroupTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_GroupClassification_Church", "Church")]
        public Church Church
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_GroupClassification_Church", "Church").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_GroupClassification_Church", "Church").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Church> ChurchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_GroupClassification_Church", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Church>("oikonomosModel.FK_GroupClassification_Church", "Church", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_GroupClassification_GroupType", "GroupType")]
        public GroupType GroupType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupType>("oikonomosModel.FK_GroupClassification_GroupType", "GroupType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupType>("oikonomosModel.FK_GroupClassification_GroupType", "GroupType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupType> GroupTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupType>("oikonomosModel.FK_GroupClassification_GroupType", "GroupType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupType>("oikonomosModel.FK_GroupClassification_GroupType", "GroupType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Group_GroupClassification", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("oikonomosModel.FK_Group_GroupClassification", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("oikonomosModel.FK_Group_GroupClassification", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="GroupType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupType object.
        /// </summary>
        /// <param name="groupTypeId">Initial value of the GroupTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static GroupType CreateGroupType(global::System.Int32 groupTypeId, global::System.String name, global::System.DateTime created)
        {
            GroupType groupType = new GroupType();
            groupType.GroupTypeId = groupTypeId;
            groupType.Name = name;
            groupType.Created = created;
            return groupType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupTypeId
        {
            get
            {
                return _GroupTypeId;
            }
            set
            {
                if (_GroupTypeId != value)
                {
                    OnGroupTypeIdChanging(value);
                    ReportPropertyChanging("GroupTypeId");
                    _GroupTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupTypeId");
                    OnGroupTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _GroupTypeId;
        partial void OnGroupTypeIdChanging(global::System.Int32 value);
        partial void OnGroupTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_GroupClassification_GroupType", "GroupClassification")]
        public EntityCollection<GroupClassification> GroupClassifications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupClassification>("oikonomosModel.FK_GroupClassification_GroupType", "GroupClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupClassification>("oikonomosModel.FK_GroupClassification_GroupType", "GroupClassification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Group_GroupType", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("oikonomosModel.FK_Group_GroupType", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("oikonomosModel.FK_Group_GroupType", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="OptionalField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OptionalField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OptionalField object.
        /// </summary>
        /// <param name="optionalFieldId">Initial value of the OptionalFieldId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static OptionalField CreateOptionalField(global::System.Int32 optionalFieldId, global::System.String name, global::System.DateTime created)
        {
            OptionalField optionalField = new OptionalField();
            optionalField.OptionalFieldId = optionalFieldId;
            optionalField.Name = name;
            optionalField.Created = created;
            return optionalField;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OptionalFieldId
        {
            get
            {
                return _OptionalFieldId;
            }
            set
            {
                if (_OptionalFieldId != value)
                {
                    OnOptionalFieldIdChanging(value);
                    ReportPropertyChanging("OptionalFieldId");
                    _OptionalFieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OptionalFieldId");
                    OnOptionalFieldIdChanged();
                }
            }
        }
        private global::System.Int32 _OptionalFieldId;
        partial void OnOptionalFieldIdChanging(global::System.Int32 value);
        partial void OnOptionalFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Regex
        {
            get
            {
                return _Regex;
            }
            set
            {
                OnRegexChanging(value);
                ReportPropertyChanging("Regex");
                _Regex = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Regex");
                OnRegexChanged();
            }
        }
        private global::System.String _Regex;
        partial void OnRegexChanging(global::System.String value);
        partial void OnRegexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchOptionalField_OptionalField", "ChurchOptionalField")]
        public EntityCollection<ChurchOptionalField> ChurchOptionalFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChurchOptionalField>("oikonomosModel.FK_ChurchOptionalField_OptionalField", "ChurchOptionalField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChurchOptionalField>("oikonomosModel.FK_ChurchOptionalField_OptionalField", "ChurchOptionalField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonOptionalField_OptionalField", "PersonOptionalField")]
        public EntityCollection<PersonOptionalField> PersonOptionalFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonOptionalField>("oikonomosModel.FK_PersonOptionalField_OptionalField", "PersonOptionalField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonOptionalField>("oikonomosModel.FK_PersonOptionalField_OptionalField", "PersonOptionalField", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="permissionId">Initial value of the PermissionId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="isVisible">Initial value of the IsVisible property.</param>
        public static Permission CreatePermission(global::System.Int32 permissionId, global::System.String name, global::System.String description, global::System.String category, global::System.DateTime created, global::System.DateTime changed, global::System.Boolean isVisible)
        {
            Permission permission = new Permission();
            permission.PermissionId = permissionId;
            permission.Name = name;
            permission.Description = description;
            permission.Category = category;
            permission.Created = created;
            permission.Changed = changed;
            permission.IsVisible = isVisible;
            return permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionId
        {
            get
            {
                return _PermissionId;
            }
            set
            {
                if (_PermissionId != value)
                {
                    OnPermissionIdChanging(value);
                    ReportPropertyChanging("PermissionId");
                    _PermissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PermissionId");
                    OnPermissionIdChanged();
                }
            }
        }
        private global::System.Int32 _PermissionId;
        partial void OnPermissionIdChanging(global::System.Int32 value);
        partial void OnPermissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVisible
        {
            get
            {
                return _IsVisible;
            }
            set
            {
                OnIsVisibleChanging(value);
                ReportPropertyChanging("IsVisible");
                _IsVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVisible");
                OnIsVisibleChanged();
            }
        }
        private global::System.Boolean _IsVisible;
        partial void OnIsVisibleChanging(global::System.Boolean value);
        partial void OnIsVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DependentOn
        {
            get
            {
                return _DependentOn;
            }
            set
            {
                OnDependentOnChanging(value);
                ReportPropertyChanging("DependentOn");
                _DependentOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DependentOn");
                OnDependentOnChanged();
            }
        }
        private Nullable<global::System.Int32> _DependentOn;
        partial void OnDependentOnChanging(Nullable<global::System.Int32> value);
        partial void OnDependentOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PermissionRole_Permission", "PermissionRole")]
        public EntityCollection<PermissionRole> PermissionRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PermissionRole>("oikonomosModel.FK_PermissionRole_Permission", "PermissionRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PermissionRole>("oikonomosModel.FK_PermissionRole_Permission", "PermissionRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="PermissionRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PermissionRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PermissionRole object.
        /// </summary>
        /// <param name="permissionId">Initial value of the PermissionId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static PermissionRole CreatePermissionRole(global::System.Int32 permissionId, global::System.Int32 roleId, global::System.DateTime created, global::System.DateTime changed)
        {
            PermissionRole permissionRole = new PermissionRole();
            permissionRole.PermissionId = permissionId;
            permissionRole.RoleId = roleId;
            permissionRole.Created = created;
            permissionRole.Changed = changed;
            return permissionRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionId
        {
            get
            {
                return _PermissionId;
            }
            set
            {
                if (_PermissionId != value)
                {
                    OnPermissionIdChanging(value);
                    ReportPropertyChanging("PermissionId");
                    _PermissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PermissionId");
                    OnPermissionIdChanged();
                }
            }
        }
        private global::System.Int32 _PermissionId;
        partial void OnPermissionIdChanging(global::System.Int32 value);
        partial void OnPermissionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PermissionRole_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("oikonomosModel.FK_PermissionRole_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("oikonomosModel.FK_PermissionRole_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("oikonomosModel.FK_PermissionRole_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("oikonomosModel.FK_PermissionRole_Role", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PermissionRole_Permission", "Permission")]
        public Permission Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("oikonomosModel.FK_PermissionRole_Permission", "Permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("oikonomosModel.FK_PermissionRole_Permission", "Permission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Permission> PermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("oikonomosModel.FK_PermissionRole_Permission", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Permission>("oikonomosModel.FK_PermissionRole_Permission", "Permission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="firstname">Initial value of the Firstname property.</param>
        /// <param name="familyId">Initial value of the FamilyId property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static Person CreatePerson(global::System.Int32 personId, global::System.String firstname, global::System.Int32 familyId, global::System.DateTime created, global::System.DateTime changed)
        {
            Person person = new Person();
            person.PersonId = personId;
            person.Firstname = firstname;
            person.FamilyId = familyId;
            person.Created = created;
            person.Changed = changed;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SiteId
        {
            get
            {
                return _SiteId;
            }
            set
            {
                OnSiteIdChanging(value);
                ReportPropertyChanging("SiteId");
                _SiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteId");
                OnSiteIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SiteId;
        partial void OnSiteIdChanging(Nullable<global::System.Int32> value);
        partial void OnSiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                OnTitleIdChanging(value);
                ReportPropertyChanging("TitleId");
                _TitleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleId");
                OnTitleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TitleId;
        partial void OnTitleIdChanging(Nullable<global::System.Int32> value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FamilyId
        {
            get
            {
                return _FamilyId;
            }
            set
            {
                OnFamilyIdChanging(value);
                ReportPropertyChanging("FamilyId");
                _FamilyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FamilyId");
                OnFamilyIdChanged();
            }
        }
        private global::System.Int32 _FamilyId;
        partial void OnFamilyIdChanging(global::System.Int32 value);
        partial void OnFamilyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Occupation
        {
            get
            {
                return _Occupation;
            }
            set
            {
                OnOccupationChanging(value);
                ReportPropertyChanging("Occupation");
                _Occupation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Occupation");
                OnOccupationChanged();
            }
        }
        private global::System.String _Occupation;
        partial void OnOccupationChanging(global::System.String value);
        partial void OnOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Anniversary
        {
            get
            {
                return _Anniversary;
            }
            set
            {
                OnAnniversaryChanging(value);
                ReportPropertyChanging("Anniversary");
                _Anniversary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Anniversary");
                OnAnniversaryChanged();
            }
        }
        private Nullable<global::System.DateTime> _Anniversary;
        partial void OnAnniversaryChanging(Nullable<global::System.DateTime> value);
        partial void OnAnniversaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PublicId
        {
            get
            {
                return _PublicId;
            }
            set
            {
                OnPublicIdChanging(value);
                ReportPropertyChanging("PublicId");
                _PublicId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PublicId");
                OnPublicIdChanged();
            }
        }
        private global::System.String _PublicId;
        partial void OnPublicIdChanging(global::System.String value);
        partial void OnPublicIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Person_Family", "Family")]
        public Family Family
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Family>("oikonomosModel.FK_Person_Family", "Family").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Family>("oikonomosModel.FK_Person_Family", "Family").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Family> FamilyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Family>("oikonomosModel.FK_Person_Family", "Family");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Family>("oikonomosModel.FK_Person_Family", "Family", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Person_Site", "Site")]
        public Site Site
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("oikonomosModel.FK_Person_Site", "Site").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("oikonomosModel.FK_Person_Site", "Site").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Site> SiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("oikonomosModel.FK_Person_Site", "Site");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Site>("oikonomosModel.FK_Person_Site", "Site", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Person_Title", "Title")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("oikonomosModel.FK_Person_Title", "Title").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("oikonomosModel.FK_Person_Title", "Title").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("oikonomosModel.FK_Person_Title", "Title");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("oikonomosModel.FK_Person_Title", "Title", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonContact_Person", "PersonOptionalField")]
        public EntityCollection<PersonOptionalField> PersonOptionalFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonOptionalField>("oikonomosModel.FK_PersonContact_Person", "PersonOptionalField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonOptionalField>("oikonomosModel.FK_PersonContact_Person", "PersonOptionalField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonGroup_Person", "PersonGroup")]
        public EntityCollection<PersonGroup> PersonGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonGroup>("oikonomosModel.FK_PersonGroup_Person", "PersonGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonGroup>("oikonomosModel.FK_PersonGroup_Person", "PersonGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonRelationship_Person", "PersonRelationship")]
        public EntityCollection<PersonRelationship> PersonRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonRelationship>("oikonomosModel.FK_PersonRelationship_Person", "PersonRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonRelationship>("oikonomosModel.FK_PersonRelationship_Person", "PersonRelationship", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonRelationship_PersonRelatedTo", "PersonRelationship")]
        public EntityCollection<PersonRelationship> PersonRelationships1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonRelationship>("oikonomosModel.FK_PersonRelationship_PersonRelatedTo", "PersonRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonRelationship>("oikonomosModel.FK_PersonRelationship_PersonRelatedTo", "PersonRelationship", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonRole_Person", "PersonRole")]
        public EntityCollection<PersonRole> PersonRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonRole>("oikonomosModel.FK_PersonRole_Person", "PersonRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonRole>("oikonomosModel.FK_PersonRole_Person", "PersonRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "PersonChurch", "Church")]
        public EntityCollection<Church> Churches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Church>("oikonomosModel.PersonChurch", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Church>("oikonomosModel.PersonChurch", "Church", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Event_ChangedByPerson", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("oikonomosModel.FK_Event_ChangedByPerson", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("oikonomosModel.FK_Event_ChangedByPerson", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Event_CreatedByPerson", "Event")]
        public EntityCollection<Event> Events1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("oikonomosModel.FK_Event_CreatedByPerson", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("oikonomosModel.FK_Event_CreatedByPerson", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Group_Administrator", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("oikonomosModel.FK_Group_Administrator", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("oikonomosModel.FK_Group_Administrator", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Group_Leader", "Group")]
        public EntityCollection<Group> Groups1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("oikonomosModel.FK_Group_Leader", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("oikonomosModel.FK_Group_Leader", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="PersonGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonGroup object.
        /// </summary>
        /// <param name="personGroupId">Initial value of the PersonGroupId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="joined">Initial value of the Joined property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static PersonGroup CreatePersonGroup(global::System.Int32 personGroupId, global::System.Int32 personId, global::System.Int32 groupId, global::System.DateTime joined, global::System.DateTime created, global::System.DateTime changed)
        {
            PersonGroup personGroup = new PersonGroup();
            personGroup.PersonGroupId = personGroupId;
            personGroup.PersonId = personId;
            personGroup.GroupId = groupId;
            personGroup.Joined = joined;
            personGroup.Created = created;
            personGroup.Changed = changed;
            return personGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonGroupId
        {
            get
            {
                return _PersonGroupId;
            }
            set
            {
                if (_PersonGroupId != value)
                {
                    OnPersonGroupIdChanging(value);
                    ReportPropertyChanging("PersonGroupId");
                    _PersonGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonGroupId");
                    OnPersonGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _PersonGroupId;
        partial void OnPersonGroupIdChanging(global::System.Int32 value);
        partial void OnPersonGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Joined
        {
            get
            {
                return _Joined;
            }
            set
            {
                OnJoinedChanging(value);
                ReportPropertyChanging("Joined");
                _Joined = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Joined");
                OnJoinedChanged();
            }
        }
        private global::System.DateTime _Joined;
        partial void OnJoinedChanging(global::System.DateTime value);
        partial void OnJoinedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonGroup_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonGroup_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonGroup_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonGroup_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("oikonomosModel.FK_PersonGroup_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonGroup_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("oikonomosModel.FK_PersonGroup_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("oikonomosModel.FK_PersonGroup_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("oikonomosModel.FK_PersonGroup_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("oikonomosModel.FK_PersonGroup_Group", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="PersonOptionalField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonOptionalField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonOptionalField object.
        /// </summary>
        /// <param name="personOptionalFieldId">Initial value of the PersonOptionalFieldId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="optionalFieldId">Initial value of the OptionalFieldId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static PersonOptionalField CreatePersonOptionalField(global::System.Int32 personOptionalFieldId, global::System.Int32 personId, global::System.Int32 optionalFieldId, global::System.String value, global::System.DateTime created, global::System.DateTime changed)
        {
            PersonOptionalField personOptionalField = new PersonOptionalField();
            personOptionalField.PersonOptionalFieldId = personOptionalFieldId;
            personOptionalField.PersonId = personId;
            personOptionalField.OptionalFieldId = optionalFieldId;
            personOptionalField.Value = value;
            personOptionalField.Created = created;
            personOptionalField.Changed = changed;
            return personOptionalField;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonOptionalFieldId
        {
            get
            {
                return _PersonOptionalFieldId;
            }
            set
            {
                if (_PersonOptionalFieldId != value)
                {
                    OnPersonOptionalFieldIdChanging(value);
                    ReportPropertyChanging("PersonOptionalFieldId");
                    _PersonOptionalFieldId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonOptionalFieldId");
                    OnPersonOptionalFieldIdChanged();
                }
            }
        }
        private global::System.Int32 _PersonOptionalFieldId;
        partial void OnPersonOptionalFieldIdChanging(global::System.Int32 value);
        partial void OnPersonOptionalFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OptionalFieldId
        {
            get
            {
                return _OptionalFieldId;
            }
            set
            {
                OnOptionalFieldIdChanging(value);
                ReportPropertyChanging("OptionalFieldId");
                _OptionalFieldId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionalFieldId");
                OnOptionalFieldIdChanged();
            }
        }
        private global::System.Int32 _OptionalFieldId;
        partial void OnOptionalFieldIdChanging(global::System.Int32 value);
        partial void OnOptionalFieldIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonOptionalField_OptionalField", "OptionalField")]
        public OptionalField OptionalField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionalField>("oikonomosModel.FK_PersonOptionalField_OptionalField", "OptionalField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionalField>("oikonomosModel.FK_PersonOptionalField_OptionalField", "OptionalField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OptionalField> OptionalFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionalField>("oikonomosModel.FK_PersonOptionalField_OptionalField", "OptionalField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OptionalField>("oikonomosModel.FK_PersonOptionalField_OptionalField", "OptionalField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonContact_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonContact_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonContact_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonContact_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("oikonomosModel.FK_PersonContact_Person", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="PersonRelationship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonRelationship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonRelationship object.
        /// </summary>
        /// <param name="personRelationshipId">Initial value of the PersonRelationshipId property.</param>
        /// <param name="personRelatedToId">Initial value of the PersonRelatedToId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="relationshipId">Initial value of the RelationshipId property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static PersonRelationship CreatePersonRelationship(global::System.Int32 personRelationshipId, global::System.Int32 personRelatedToId, global::System.Int32 personId, global::System.Int32 relationshipId, global::System.DateTime created, global::System.DateTime changed)
        {
            PersonRelationship personRelationship = new PersonRelationship();
            personRelationship.PersonRelationshipId = personRelationshipId;
            personRelationship.PersonRelatedToId = personRelatedToId;
            personRelationship.PersonId = personId;
            personRelationship.RelationshipId = relationshipId;
            personRelationship.Created = created;
            personRelationship.Changed = changed;
            return personRelationship;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonRelationshipId
        {
            get
            {
                return _PersonRelationshipId;
            }
            set
            {
                if (_PersonRelationshipId != value)
                {
                    OnPersonRelationshipIdChanging(value);
                    ReportPropertyChanging("PersonRelationshipId");
                    _PersonRelationshipId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonRelationshipId");
                    OnPersonRelationshipIdChanged();
                }
            }
        }
        private global::System.Int32 _PersonRelationshipId;
        partial void OnPersonRelationshipIdChanging(global::System.Int32 value);
        partial void OnPersonRelationshipIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonRelatedToId
        {
            get
            {
                return _PersonRelatedToId;
            }
            set
            {
                OnPersonRelatedToIdChanging(value);
                ReportPropertyChanging("PersonRelatedToId");
                _PersonRelatedToId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonRelatedToId");
                OnPersonRelatedToIdChanged();
            }
        }
        private global::System.Int32 _PersonRelatedToId;
        partial void OnPersonRelatedToIdChanging(global::System.Int32 value);
        partial void OnPersonRelatedToIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationshipId
        {
            get
            {
                return _RelationshipId;
            }
            set
            {
                OnRelationshipIdChanging(value);
                ReportPropertyChanging("RelationshipId");
                _RelationshipId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationshipId");
                OnRelationshipIdChanged();
            }
        }
        private global::System.Int32 _RelationshipId;
        partial void OnRelationshipIdChanging(global::System.Int32 value);
        partial void OnRelationshipIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonRelationship_Relationship", "Relationship")]
        public Relationship Relationship
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relationship>("oikonomosModel.FK_PersonRelationship_Relationship", "Relationship").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relationship>("oikonomosModel.FK_PersonRelationship_Relationship", "Relationship").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Relationship> RelationshipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relationship>("oikonomosModel.FK_PersonRelationship_Relationship", "Relationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Relationship>("oikonomosModel.FK_PersonRelationship_Relationship", "Relationship", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonRelationship_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonRelationship_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonRelationship_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonRelationship_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("oikonomosModel.FK_PersonRelationship_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonRelationship_PersonRelatedTo", "Person")]
        public Person Person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonRelationship_PersonRelatedTo", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonRelationship_PersonRelatedTo", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> Person1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonRelationship_PersonRelatedTo", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("oikonomosModel.FK_PersonRelationship_PersonRelatedTo", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="PersonRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonRole object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static PersonRole CreatePersonRole(global::System.Int32 roleId, global::System.Int32 personId, global::System.DateTime created, global::System.DateTime changed)
        {
            PersonRole personRole = new PersonRole();
            personRole.RoleId = roleId;
            personRole.PersonId = personId;
            personRole.Created = created;
            personRole.Changed = changed;
            return personRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonRole_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("oikonomosModel.FK_PersonRole_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("oikonomosModel.FK_PersonRole_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("oikonomosModel.FK_PersonRole_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("oikonomosModel.FK_PersonRole_Role", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonRole_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonRole_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonRole_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("oikonomosModel.FK_PersonRole_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("oikonomosModel.FK_PersonRole_Person", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Relationship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Relationship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Relationship object.
        /// </summary>
        /// <param name="relationshipId">Initial value of the RelationshipId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static Relationship CreateRelationship(global::System.Int32 relationshipId, global::System.String name, global::System.DateTime created)
        {
            Relationship relationship = new Relationship();
            relationship.RelationshipId = relationshipId;
            relationship.Name = name;
            relationship.Created = created;
            return relationship;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationshipId
        {
            get
            {
                return _RelationshipId;
            }
            set
            {
                if (_RelationshipId != value)
                {
                    OnRelationshipIdChanging(value);
                    ReportPropertyChanging("RelationshipId");
                    _RelationshipId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RelationshipId");
                    OnRelationshipIdChanged();
                }
            }
        }
        private global::System.Int32 _RelationshipId;
        partial void OnRelationshipIdChanging(global::System.Int32 value);
        partial void OnRelationshipIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonRelationship_Relationship", "PersonRelationship")]
        public EntityCollection<PersonRelationship> PersonRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonRelationship>("oikonomosModel.FK_PersonRelationship_Relationship", "PersonRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonRelationship>("oikonomosModel.FK_PersonRelationship_Relationship", "PersonRelationship", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="churchId">Initial value of the ChurchId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        public static Role CreateRole(global::System.Int32 roleId, global::System.Int32 churchId, global::System.String name, global::System.DateTime created, global::System.DateTime changed, global::System.String displayName)
        {
            Role role = new Role();
            role.RoleId = roleId;
            role.ChurchId = churchId;
            role.Name = name;
            role.Created = created;
            role.Changed = changed;
            role.DisplayName = displayName;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchId
        {
            get
            {
                return _ChurchId;
            }
            set
            {
                OnChurchIdChanging(value);
                ReportPropertyChanging("ChurchId");
                _ChurchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchId");
                OnChurchIdChanged();
            }
        }
        private global::System.Int32 _ChurchId;
        partial void OnChurchIdChanging(global::System.Int32 value);
        partial void OnChurchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Role_Church", "Church")]
        public Church Church
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_Role_Church", "Church").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_Role_Church", "Church").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Church> ChurchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_Role_Church", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Church>("oikonomosModel.FK_Role_Church", "Church", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PermissionRole_Role", "PermissionRole")]
        public EntityCollection<PermissionRole> PermissionRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PermissionRole>("oikonomosModel.FK_PermissionRole_Role", "PermissionRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PermissionRole>("oikonomosModel.FK_PermissionRole_Role", "PermissionRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_PersonRole_Role", "PersonRole")]
        public EntityCollection<PersonRole> PersonRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonRole>("oikonomosModel.FK_PersonRole_Role", "PersonRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonRole>("oikonomosModel.FK_PersonRole_Role", "PersonRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "CanSetRole", "Role1")]
        public EntityCollection<Role> Role1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("oikonomosModel.CanSetRole", "Role1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("oikonomosModel.CanSetRole", "Role1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "CanSetRole", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("oikonomosModel.CanSetRole", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("oikonomosModel.CanSetRole", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Site")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Site : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Site object.
        /// </summary>
        /// <param name="siteId">Initial value of the SiteId property.</param>
        /// <param name="churchId">Initial value of the ChurchId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="changed">Initial value of the Changed property.</param>
        public static Site CreateSite(global::System.Int32 siteId, global::System.Int32 churchId, global::System.String name, global::System.DateTime created, global::System.DateTime changed)
        {
            Site site = new Site();
            site.SiteId = siteId;
            site.ChurchId = churchId;
            site.Name = name;
            site.Created = created;
            site.Changed = changed;
            return site;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteId
        {
            get
            {
                return _SiteId;
            }
            set
            {
                if (_SiteId != value)
                {
                    OnSiteIdChanging(value);
                    ReportPropertyChanging("SiteId");
                    _SiteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SiteId");
                    OnSiteIdChanged();
                }
            }
        }
        private global::System.Int32 _SiteId;
        partial void OnSiteIdChanging(global::System.Int32 value);
        partial void OnSiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChurchId
        {
            get
            {
                return _ChurchId;
            }
            set
            {
                OnChurchIdChanging(value);
                ReportPropertyChanging("ChurchId");
                _ChurchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChurchId");
                OnChurchIdChanged();
            }
        }
        private global::System.Int32 _ChurchId;
        partial void OnChurchIdChanging(global::System.Int32 value);
        partial void OnChurchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Changed
        {
            get
            {
                return _Changed;
            }
            set
            {
                OnChangedChanging(value);
                ReportPropertyChanging("Changed");
                _Changed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Changed");
                OnChangedChanged();
            }
        }
        private global::System.DateTime _Changed;
        partial void OnChangedChanging(global::System.DateTime value);
        partial void OnChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                OnAddressIdChanging(value);
                ReportPropertyChanging("AddressId");
                _AddressId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressId");
                OnAddressIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressId;
        partial void OnAddressIdChanging(Nullable<global::System.Int32> value);
        partial void OnAddressIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Site_Church", "Church")]
        public Church Church
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_Site_Church", "Church").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_Site_Church", "Church").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Church> ChurchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Church>("oikonomosModel.FK_Site_Church", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Church>("oikonomosModel.FK_Site_Church", "Church", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Site_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("oikonomosModel.FK_Site_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("oikonomosModel.FK_Site_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("oikonomosModel.FK_Site_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("oikonomosModel.FK_Site_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Person_Site", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("oikonomosModel.FK_Person_Site", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("oikonomosModel.FK_Person_Site", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="SmsProvider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SmsProvider : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SmsProvider object.
        /// </summary>
        /// <param name="smsProviderId">Initial value of the SmsProviderId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SmsProvider CreateSmsProvider(global::System.Int32 smsProviderId, global::System.String name)
        {
            SmsProvider smsProvider = new SmsProvider();
            smsProvider.SmsProviderId = smsProviderId;
            smsProvider.Name = name;
            return smsProvider;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SmsProviderId
        {
            get
            {
                return _SmsProviderId;
            }
            set
            {
                if (_SmsProviderId != value)
                {
                    OnSmsProviderIdChanging(value);
                    ReportPropertyChanging("SmsProviderId");
                    _SmsProviderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SmsProviderId");
                    OnSmsProviderIdChanged();
                }
            }
        }
        private global::System.Int32 _SmsProviderId;
        partial void OnSmsProviderIdChanging(global::System.Int32 value);
        partial void OnSmsProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_ChurchSmsProvider_SmsProvider", "ChurchSmsProvider")]
        public EntityCollection<ChurchSmsProvider> ChurchSmsProviders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChurchSmsProvider>("oikonomosModel.FK_ChurchSmsProvider_SmsProvider", "ChurchSmsProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChurchSmsProvider>("oikonomosModel.FK_ChurchSmsProvider_SmsProvider", "ChurchSmsProvider", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Status CreateStatus(global::System.Int32 statusId, global::System.String name)
        {
            Status status = new Status();
            status.StatusId = statusId;
            status.Name = name;
            return status;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                if (_StatusId != value)
                {
                    OnStatusIdChanging(value);
                    ReportPropertyChanging("StatusId");
                    _StatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusId");
                    OnStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Church_Status", "Church")]
        public EntityCollection<Church> Churches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Church>("oikonomosModel.FK_Church_Status", "Church");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Church>("oikonomosModel.FK_Church_Status", "Church", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Table")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Table : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Table object.
        /// </summary>
        /// <param name="tableId">Initial value of the TableId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static Table CreateTable(global::System.Int32 tableId, global::System.String name, global::System.DateTime created)
        {
            Table table = new Table();
            table.TableId = tableId;
            table.Name = name;
            table.Created = created;
            return table;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TableId
        {
            get
            {
                return _TableId;
            }
            set
            {
                if (_TableId != value)
                {
                    OnTableIdChanging(value);
                    ReportPropertyChanging("TableId");
                    _TableId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TableId");
                    OnTableIdChanged();
                }
            }
        }
        private global::System.Int32 _TableId;
        partial void OnTableIdChanging(global::System.Int32 value);
        partial void OnTableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_EventType_Table", "EventType")]
        public EntityCollection<EventType> EventTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventType>("oikonomosModel.FK_EventType_Table", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventType>("oikonomosModel.FK_EventType_Table", "EventType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Event_Table", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("oikonomosModel.FK_Event_Table", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("oikonomosModel.FK_Event_Table", "Event", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="oikonomosModel", Name="Title")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Title : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Title object.
        /// </summary>
        /// <param name="titleId">Initial value of the TitleId property.</param>
        /// <param name="title1">Initial value of the Title1 property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static Title CreateTitle(global::System.Int32 titleId, global::System.String title1, global::System.DateTime created)
        {
            Title title = new Title();
            title.TitleId = titleId;
            title.Title1 = title1;
            title.Created = created;
            return title;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                if (_TitleId != value)
                {
                    OnTitleIdChanging(value);
                    ReportPropertyChanging("TitleId");
                    _TitleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TitleId");
                    OnTitleIdChanged();
                }
            }
        }
        private global::System.Int32 _TitleId;
        partial void OnTitleIdChanging(global::System.Int32 value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title1
        {
            get
            {
                return _Title1;
            }
            set
            {
                OnTitle1Changing(value);
                ReportPropertyChanging("Title1");
                _Title1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title1");
                OnTitle1Changed();
            }
        }
        private global::System.String _Title1;
        partial void OnTitle1Changing(global::System.String value);
        partial void OnTitle1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("oikonomosModel", "FK_Person_Title", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("oikonomosModel.FK_Person_Title", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("oikonomosModel.FK_Person_Title", "Person", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="oikonomosModel", Name="FetchComments_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FetchComments_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FetchComments_Result object.
        /// </summary>
        /// <param name="reference">Initial value of the Reference property.</param>
        public static FetchComments_Result CreateFetchComments_Result(global::System.Int32 reference)
        {
            FetchComments_Result fetchComments_Result = new FetchComments_Result();
            fetchComments_Result.Reference = reference;
            return fetchComments_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.Int32 _Reference;
        partial void OnReferenceChanging(global::System.Int32 value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="oikonomosModel", Name="FetchGroupAttendance_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class FetchGroupAttendance_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FetchGroupAttendance_Result object.
        /// </summary>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FetchGroupAttendance_Result CreateFetchGroupAttendance_Result(global::System.Int32 groupId, global::System.String name)
        {
            FetchGroupAttendance_Result fetchGroupAttendance_Result = new FetchGroupAttendance_Result();
            fetchGroupAttendance_Result.GroupId = groupId;
            fetchGroupAttendance_Result.Name = name;
            return fetchGroupAttendance_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> C1
        {
            get
            {
                return _C1;
            }
            set
            {
                OnC1Changing(value);
                ReportPropertyChanging("C1");
                _C1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C1");
                OnC1Changed();
            }
        }
        private Nullable<global::System.Decimal> _C1;
        partial void OnC1Changing(Nullable<global::System.Decimal> value);
        partial void OnC1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> C2
        {
            get
            {
                return _C2;
            }
            set
            {
                OnC2Changing(value);
                ReportPropertyChanging("C2");
                _C2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C2");
                OnC2Changed();
            }
        }
        private Nullable<global::System.Decimal> _C2;
        partial void OnC2Changing(Nullable<global::System.Decimal> value);
        partial void OnC2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> C3
        {
            get
            {
                return _C3;
            }
            set
            {
                OnC3Changing(value);
                ReportPropertyChanging("C3");
                _C3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C3");
                OnC3Changed();
            }
        }
        private Nullable<global::System.Decimal> _C3;
        partial void OnC3Changing(Nullable<global::System.Decimal> value);
        partial void OnC3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> C4
        {
            get
            {
                return _C4;
            }
            set
            {
                OnC4Changing(value);
                ReportPropertyChanging("C4");
                _C4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C4");
                OnC4Changed();
            }
        }
        private Nullable<global::System.Decimal> _C4;
        partial void OnC4Changing(Nullable<global::System.Decimal> value);
        partial void OnC4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> C5
        {
            get
            {
                return _C5;
            }
            set
            {
                OnC5Changing(value);
                ReportPropertyChanging("C5");
                _C5 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C5");
                OnC5Changed();
            }
        }
        private Nullable<global::System.Decimal> _C5;
        partial void OnC5Changing(Nullable<global::System.Decimal> value);
        partial void OnC5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> C6
        {
            get
            {
                return _C6;
            }
            set
            {
                OnC6Changing(value);
                ReportPropertyChanging("C6");
                _C6 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C6");
                OnC6Changed();
            }
        }
        private Nullable<global::System.Decimal> _C6;
        partial void OnC6Changing(Nullable<global::System.Decimal> value);
        partial void OnC6Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> C7
        {
            get
            {
                return _C7;
            }
            set
            {
                OnC7Changing(value);
                ReportPropertyChanging("C7");
                _C7 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C7");
                OnC7Changed();
            }
        }
        private Nullable<global::System.Decimal> _C7;
        partial void OnC7Changing(Nullable<global::System.Decimal> value);
        partial void OnC7Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> C8
        {
            get
            {
                return _C8;
            }
            set
            {
                OnC8Changing(value);
                ReportPropertyChanging("C8");
                _C8 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C8");
                OnC8Changed();
            }
        }
        private Nullable<global::System.Decimal> _C8;
        partial void OnC8Changing(Nullable<global::System.Decimal> value);
        partial void OnC8Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> C9
        {
            get
            {
                return _C9;
            }
            set
            {
                OnC9Changing(value);
                ReportPropertyChanging("C9");
                _C9 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C9");
                OnC9Changed();
            }
        }
        private Nullable<global::System.Decimal> _C9;
        partial void OnC9Changing(Nullable<global::System.Decimal> value);
        partial void OnC9Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> C10
        {
            get
            {
                return _C10;
            }
            set
            {
                OnC10Changing(value);
                ReportPropertyChanging("C10");
                _C10 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C10");
                OnC10Changed();
            }
        }
        private Nullable<global::System.Decimal> _C10;
        partial void OnC10Changing(Nullable<global::System.Decimal> value);
        partial void OnC10Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> C11
        {
            get
            {
                return _C11;
            }
            set
            {
                OnC11Changing(value);
                ReportPropertyChanging("C11");
                _C11 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C11");
                OnC11Changed();
            }
        }
        private Nullable<global::System.Decimal> _C11;
        partial void OnC11Changing(Nullable<global::System.Decimal> value);
        partial void OnC11Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> C12
        {
            get
            {
                return _C12;
            }
            set
            {
                OnC12Changing(value);
                ReportPropertyChanging("C12");
                _C12 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("C12");
                OnC12Changed();
            }
        }
        private Nullable<global::System.Decimal> _C12;
        partial void OnC12Changing(Nullable<global::System.Decimal> value);
        partial void OnC12Changed();

        #endregion
    }

    #endregion
    
}
